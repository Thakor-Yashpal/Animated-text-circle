@import url("https://fonts.googleapis.com/css2?family=Noto+Serif+Georgian:wght@800&family=Rampart+One&display=swap");
* {
    box-sizing: border-box;
    font-family: "Noto Serif Georgian", serif;
    font-size: 6vmin;
    margin: 0px;
    padding: 0px;
    color: rgb(255, 255, 255);
}

html {
    width: 100%;
    height: 100%;
}

body {
    background-image: linear-gradient(45deg, rgb(255, 0, 0), blue);
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    overflow: hidden;
    transform-style: preserve-3d;
}

section {
    width: 60vw;
    aspect-ratio: 5;
    background-color: transparent;
    box-shadow: inset 1px 1px 5px rgb(50, 50, 50), 2px 2px 15px rgb(50, 50, 50);
    backdrop-filter: blur(100px);
    border-radius: 20px;
    display: grid;
    overflow: hidden;
    align-items: center;
    align-content: center;
    justify-content: space-evenly;
    grid-template: 100% / auto auto auto auto auto;
}

.hour,
.minute,
.second {
    display: flex;
    position: relative;
    align-items: center;
    justify-content: center;
    overflow: hidden;
    height: 7vmin;
    aspect-ratio: 2;
    background-image: linear-gradient(45deg, rgb(170, 0, 255), rgb(0, 200, 255));
    border-radius: 2vmin;
}

.item {
    position: relative;
    width: 3.5vmin;
    height: 8vmin;
}

.hour .item:nth-child(1) .digit {
    position: absolute;
    transform: rotateX(calc(var(--j) * calc(360deg / 3))) translateZ(25px);
    animation: move-1 calc(12 * 60 * 60s) cubic-bezier(1, -0.01, 0.92, -0.3) 0s infinite;
    transform-origin: 0px 0px 0px;
    backface-visibility: hidden;
}

@keyframes move-1 {
    0% {
        transform: rotateX(calc(var(--j) * calc(360deg / 3))) translateZ(10vmax);
    }
    8.33334% {
        transform: rotateX(calc(var(--j) * calc(360deg / 3) + 1 * calc(360deg / 3))) translateZ(10vmax);
    }
    83.3334% {
        transform: rotateX(calc(var(--j) * calc(360deg / 3) + 2 * calc(360deg / 3))) translateZ(10vmax);
    }
    100% {
        transform: rotateX( calc((var(--j) * calc(360deg / 3)) + 3 * calc(360deg / 3))) translateZ(10vmax);
    }
}

.hour .item:nth-child(2) .digit {
    position: absolute;
    transform: rotateX(calc(var(--j) * calc(360deg / 12))) translateZ(11vmin);
    animation: move-2 calc(12 * 60 * 60s) cubic-bezier(1, -0.01, 0.92, -0.3) 0s infinite;
    transform-origin: 0px 0px 0px;
    backface-visibility: hidden;
}

@keyframes move-2 {
    0% {
        transform: rotateX(calc(var(--j) * calc(360deg / 12))) translateZ(12vmax);
    }
    8.33334% {
        transform: rotateX( calc(var(--j) * calc(360deg / 12) + 1 * calc(360deg / 12))) translateZ(12vmax);
    }
    16.66668% {
        transform: rotateX( calc(var(--j) * calc(360deg / 12) + 2 * calc(360deg / 12))) translateZ(12vmax);
    }
    25% {
        transform: rotateX( calc(var(--j) * calc(360deg / 12) + 3 * calc(360deg / 12))) translateZ(12vmax);
    }
    33.33336% {
        transform: rotateX( calc(var(--j) * calc(360deg / 12) + 4 * calc(360deg / 12))) translateZ(12vmax);
    }
    41.66664% {
        transform: rotateX( calc(var(--j) * calc(360deg / 12) + 5 * calc(360deg / 12))) translateZ(12vmax);
    }
    50% {
        transform: rotateX( calc(var(--j) * calc(360deg / 12) + 6 * calc(360deg / 12))) translateZ(12vmax);
    }
    58.33334% {
        transform: rotateX( calc(var(--j) * calc(360deg / 12) + 7 * calc(360deg / 12))) translateZ(12vmax);
    }
    66.66668% {
        transform: rotateX( calc(var(--j) * calc(360deg / 12) + 8 * calc(360deg / 12))) translateZ(12vmax);
    }
    75% {
        transform: rotateX( calc(var(--j) * calc(360deg / 12) + 9 * calc(360deg / 12))) translateZ(12vmax);
    }
    83.33336% {
        transform: rotateX( calc(var(--j) * calc(360deg / 12) + 10 * calc(360deg / 12))) translateZ(12vmax);
    }
    91.66664% {
        transform: rotateX( calc(var(--j) * calc(360deg / 12) + 11 * calc(360deg / 12))) translateZ(10vmax);
    }
    100% {
        transform: rotateX( calc((var(--j) * calc(360deg / 12)) + 12 * calc(360deg / 12))) translateZ(10vmax);
    }
}

.minute .item:nth-child(2) .digit,
.second .item:nth-child(2) .digit {
    position: absolute;
    transform: rotateX(calc(var(--j) * calc(360deg / 10))) translateZ(10vmin);
    transform-origin: 0px 0px 0px;
    animation: move-3 infinite;
    backface-visibility: hidden;
}

.minute .item:nth-child(2) .digit {
    animation-duration: calc(10 * 60s);
    animation-timing-function: cubic-bezier(1, 0, 0.91, -0.44);
}

.second .item:nth-child(2) .digit {
    animation-duration: calc(10 * 1s);
    animation-timing-function: cubic-bezier(1, 0, 0.91, -0.44);
}

@keyframes move-3 {
    0% {
        transform: rotateX(calc(var(--j) * calc(360deg / 10))) translateZ(10vmax);
    }
    10% {
        transform: rotateX( calc(var(--j) * calc(360deg / 10) + 1 * calc(360deg / 10))) translateZ(10vmax);
    }
    20% {
        transform: rotateX( calc(var(--j) * calc(360deg / 10) + 2 * calc(360deg / 10))) translateZ(10vmax);
    }
    30% {
        transform: rotateX( calc(var(--j) * calc(360deg / 10) + 3 * calc(360deg / 10))) translateZ(10vmax);
    }
    40% {
        transform: rotateX( calc(var(--j) * calc(360deg / 10) + 4 * calc(360deg / 10))) translateZ(10vmax);
    }
    50% {
        transform: rotateX( calc(var(--j) * calc(360deg / 10) + 5 * calc(360deg / 10))) translateZ(10vmax);
    }
    60% {
        transform: rotateX( calc(var(--j) * calc(360deg / 10) + 6 * calc(360deg / 10))) translateZ(10vmax);
    }
    70% {
        transform: rotateX( calc(var(--j) * calc(360deg / 10) + 7 * calc(360deg / 10))) translateZ(10vmax);
    }
    80% {
        transform: rotateX( calc(var(--j) * calc(360deg / 10) + 8 * calc(360deg / 10))) translateZ(10vmax);
    }
    90% {
        transform: rotateX( calc(var(--j) * calc(360deg / 10) + 9 * calc(360deg / 10))) translateZ(10vmax);
    }
    100% {
        transform: rotateX( calc(var(--j) * calc(360deg / 10) + 10 * calc(360deg / 10))) translateZ(10vmax);
    }
}

.minute .item:nth-child(1) .digit,
.second .item:nth-child(1) .digit {
    position: absolute;
    transform: rotateX(calc(var(--j) * calc(360deg / 6))) translateZ(20px);
    transform-origin: 0px 0px 0px;
    animation: move-4 infinite;
    backface-visibility: hidden;
}

.minute .item:nth-child(1) .digit {
    animation-duration: calc(6 * 10 * 60s);
    animation-timing-function: cubic-bezier(1, -0.01, 1, -0.34);
}

.second .item:nth-child(1) .digit {
    animation-duration: calc(6 * 10s);
    animation-timing-function: cubic-bezier(0.96, 0.14, 1, -0.58);
}

@keyframes move-4 {
    0% {
        transform: rotateX(calc(var(--j) * calc(360deg / 6))) translateZ(10vmax);
    }
    16.66668% {
        transform: rotateX(calc(var(--j) * calc(360deg / 6) + 1 * calc(360deg / 6))) translateZ(10vmax);
    }
    33.33336% {
        transform: rotateX(calc(var(--j) * calc(360deg / 6) + 2 * calc(360deg / 6))) translateZ(10vmax);
    }
    50% {
        transform: rotateX(calc(var(--j) * calc(360deg / 6) + 3 * calc(360deg / 6))) translateZ(10vmax);
    }
    66.66668% {
        transform: rotateX(calc(var(--j) * calc(360deg / 6) + 4 * calc(360deg / 6))) translateZ(10vmax);
    }
    83.33336% {
        transform: rotateX(calc(var(--j) * calc(360deg / 6) + 5 * calc(360deg / 6))) translateZ(10vmax);
    }
    100% {
        transform: rotateX(calc(var(--j) * calc(360deg / 6) + 6 * calc(360deg / 6))) translateZ(10vmax);
    }
}

.colon {
    font-family: initial;
    text-align: center;
}